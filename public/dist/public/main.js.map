{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* ul li{\\n    list-style-type: none;\\n    list-style-position: inside;\\n} */\\n.orange{\\n    border: solid orange 5px;\\n}\\n.blue{\\n    border: solid blue 5px;\\n}\\n.green{\\n    border: solid green 5px;\\n}\\n.create{\\n    border: solid grey 5px;\\n}\\n.edit{\\n    border: solid red 5px;\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"orange\\\" style=\\\"text-align:center\\\">\\n  <p *ngIf=\\\"errors\\\">{{ errors | json }}</p>\\n  <div class=\\\"create\\\">\\n    <h3>New Task</h3>\\n    <form (submit)=\\\"createTask()\\\" class=\\\"postForm\\\">\\n      <p>{{ newTask | json }}</p>\\n      <p>Title: <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" /></p>\\n      <p>Desc: <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)] =\\\"newTask.description\\\"></p>\\n      <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n    </form>\\n    {{ cat | json }}\\n  </div>\\n  <div class=\\\"blue\\\" style=\\\"text-align:center\\\">\\n    <button (click)=\\\"allTasks()\\\">GET ALL TASKS</button>\\n    <p *ngFor=\\\"let task of tasks\\\"> {{ task.title }}: {{ task.description }}\\n      <button (click)=\\\"oneTask(task._id)\\\">Edit</button> | \\n      <button (click)=\\\"deleteTask(task._id)\\\">Delete</button>\\n    </p>\\n    <div *ngIf=\\\"selectedTask\\\">\\n      <form (submit)=\\\"updateTask()\\\">\\n        <p>Title: <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"selectedTask.title\\\"></p>\\n        <p>Desc: <input type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"selectedTask.description\\\"></p>\\n        <input type=\\\"submit\\\" value=\\\"Update Task\\\">\\n      </form>\\n    </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n// export class AppComponent{\n    title1 = 'Restful Tasks API';\n    tasks = null;\n    task = null;\n    getTask: boolean = false;\n    newTask;\n    selectedTask;\n    errors;\n\n    constructor(private _httpService: HttpService){}\n    ngOnInit(){\n      this.allTasks();\n      // this.newTask = {title: \"\", description: \"\"}\n      this.resetTask();\n    }\n    createTask(){\n      let observable = this._httpService.createTask(this.newTask);\n      observable.subscribe(data => {\n        console.log(\"Got data from post back\", data);\n        this.allTasks();\n        if('errors' in data) {\n          this.errors = data;\n        }\n        this.allTasks();\n      });\n      // this.newTask = {title:\"\", description: \"\"};\n      this.resetTask();\n    }\n    allTasks() { \n      let observable = this._httpService.allTasks();\n      observable.subscribe(data => {\n        console.log(\"Got our data!\", data)\n        this.tasks = data;\n        console.log(this.tasks);\n        \n      });\n    }\n    resetTask(){\n      this.newTask = {title:\"\", description: \"\"};\n    }\n    oneTask(task_id){\n      console.log('this is the one task in the component');\n      let observable = this._httpService.oneTask(task_id);\n      observable.subscribe(data => {\n        console.log(\"Got our one task data!\", data);\n        this.selectedTask = data;\n      })\n      // this.selectedTask={\"title\":task.title, \"description\":task.description};\n    }\n    updateTask(){\n      console.log(\"this is the update task in the component\");\n      console.log(this.selectedTask.title);\n      let observable = this._httpService.updateTask(this.selectedTask);\n      observable.subscribe(data => {\n        console.log(\"updated our data!\", data);\n        this.allTasks();\n      })\n      this.selectedTask = false;\n    }\n    deleteTask(task_id){\n      console.log(\"this is the delete task in the component\");\n      let observable = this._httpService.deleteTask(task_id);\n      observable.subscribe(data => {\n        console.log(\"deleted task!\", data);\n        this.allTasks();\n      })\n    }\n  }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) {\n      this.allTasks();\n  }\n  allTasks(){\n  // let tempObservable = this._http.get('/tasks');\n  // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n    return this._http.get('/tasks');\n  }\n  getTask(id){\n    // let tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n      return this._http.get('/tasks/' + id);\n    }\n  createTask(newtask){\n    return this._http.post('/tasks', newtask);\n  }\n  oneTask(task_id){\n    console.log('one task in the service');\n    return this._http.get('/tasks/' + task_id);\n  }\n  updateTask(task){\n    console.log(\"update task in the service\");\n    return this._http.put(\"/tasks/\" + task._id, task);\n  }\n  deleteTask(task_id){\n    console.log(\"delete one task in the service\");\n    return this._http.delete('/tasks/' + task_id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}